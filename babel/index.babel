var nums = {
  0: 'zero',
  1: 'one',
  2: 'two',
  3: 'three',
  4: 'four',
  5: 'five',
  6: 'six',
  7: 'seven',
  8: 'eight',
  9: 'nine'
}

class Calculator extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      input: ''
    };
    this.handleClick = this.handleClick.bind(this);
    this.clear = this.clear.bind(this);
    this.dot = this.dot.bind(this);
    this.zero = this.zero.bind(this);
    this.calculate = this.calculate.bind(this);
    this.equals = this.equals.bind(this);
  };
  clear(){
    this.setState({
      input: ''
    });
  }
  dot(){
    if (this.state.input.indexOf(".") == -1) {
      this.setState({
        input: this.state.input + "."
      });
    };
  }
  zero(){
    if (this.state.input != '0') {
      this.setState({
        input: this.state.input + '0'
      });
    };
  }
  handleClick(event){
    this.setState({
      input: this.state.input + event.target.innerText
    });
  }
  calculate(str){
    if (str != undefined) {
      var f = new Function('return ' + str + ';');
      return f();
    } else {
      return 0; 
    }
  }
  equals() {
    this.setState({
      input: this.calculate(this.state.input)
    });
  }
  render() {
    var numKeys = [];
    for (let i=0; i<=9; i++) {
      numKeys.push(
        <RenderNumKey keyName={nums[i]} keyNum={i} onClick={this.handleClick} />
      )
    }
    return(
      <div>
        Calculator
        <div>test: {this.state.input}</div>
        <div className="row">
          <div id="display">{this.state.input}</div>
        </div>
        
        <div className="row">
          <RenderKey keyName="clear" keyValue="AC" onClick={this.clear} />
          <RenderKey keyName="divide" keyValue="/" onClick={this.handleClick} />
          <RenderKey keyName="multiply" keyValue="*" onClick={this.handleClick} />
          <RenderKey keyName="add" keyValue="+" onClick={this.handleClick} />
          <RenderKey keyName="subtract" keyValue="-" onClick={this.handleClick} />
        </div>
        
        <div className="row">
          {numKeys[7]}{numKeys[8]}{numKeys[9]}
        </div>
        <div className="row">
          {numKeys[4]}{numKeys[5]}{numKeys[6]}
        </div>
        <div className="row">
          {numKeys[1]}{numKeys[2]}{numKeys[3]}
        </div>
        <div className="row">
          <RenderNumKey keyName={nums[0]} keyNum={0} onClick={this.zero} />
          <RenderKey keyName="decimal" keyValue="." onClick={this.dot} />
          <RenderKey keyName="equals" keyValue="=" onClick={this.equals} />
        </div>
      </div>
    );
  }
};

class RenderKey extends React.Component {
  constructor(props) {
    super(props);
  }
  render(){
    return(
    <button id={this.props.keyName} onClick={this.props.onClick}>{this.props.keyValue}</button>
    );
  }
}

class RenderNumKey extends React.Component {
  constructor(props) {
    super(props);
  }
  render() {
    return (
      <button id={this.props.keyName} onClick={this.props.onClick}>{this.props.keyNum}</button>
    );
  }
}

ReactDOM.render(<Calculator />, document.getElementById('calculator'));